name: build & test API with poetry & pytest 

on: 
    push:
        branches: ["api"]
    pull_request:
        branches: ["main"]

    workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
          - info
          - warning
          - debug
        tags:
          description: 'Test scenario tags'
          required: false
          type: boolean


jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.6'

      - name: Install poetry
        uses: abatilo/actions-poetry@v2


      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: go to the workdir
        run: cd ./api/

      - name: Install the project dependencies
        run: poetry install -C .

      - name: Run the automated tests
        run: poetry -C . run pytest -v
